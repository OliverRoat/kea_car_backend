services:
  mysql:
    image: mysql
    container_name: mysql
    ports:
      - "127.0.0.1:3307:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_BACKEND_DATABASE}
    networks:
      - appnet
    volumes:
      - mysql-data:/var/lib/mysql

  mongodb:
    container_name: mongodb
    image: mongo
    ports:
      - "127.0.0.1:27017:27017"
    volumes:
      - mongodb-volume:/data/db
    networks:
      - appnet
    command: ["mongod", "--bind_ip_all"]

  neo4j:
    container_name: neo4j
    image: neo4j
    ports:
      - "127.0.0.1:7474:7474"
      - "127.0.0.1:7687:7687"
    environment:
      - NEO4J_AUTH=${NEO4J_ROOT_USER}/${NEO4J_ROOT_PASSWORD}
    volumes:
      - neo4j-volume:/data
    networks:
      - appnet

  backend:
    image: kea_car_backend:v1.0
    container_name: backend
    ports:
      - "127.0.0.1:8000:8000"
    environment:
      - DB_HOST=${MYSQL_BACKEND_HOST}
      - DB_NAME=${MYSQL_BACKEND_DATABASE}
      - DB_USER=${MYSQL_BACKEND_USER}
      - DB_PASSWORD=${MYSQL_BACKEND_PASSWORD}
      - DB_PORT=
      - MYSQL_USER=${MYSQL_ROOT_USER}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MONGO_DB_HOST=${MONGO_BACKEND_HOST}
      - MONGO_DB_PORT=${MONGO_BACKEND_PORT}
      - MONGO_DB_NAME=${MONGO_BACKEND_DATABASE}
    depends_on:
      - mysql
      - mongodb
      - neo4j
    networks:
      - appnet
    volumes:
      - .:/app
    command: ["/app/scripts/start_and_restore.sh"]

networks:
  appnet:
    driver: bridge

volumes:
  mysql-data:
  mongodb-volume:
  neo4j-volume:
